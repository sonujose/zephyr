{
    "swagger": "2.0",
    "info": {
        "description": "Kube-spectrum kubernetes Dashboard Service",
        "title": "Kube-spectrum kubernetes Service",
        "contact": {},
        "version": "2.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/ingress/{namespace}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Get services for specified namespace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.IngressDetailsResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ErrorResponse"
                            }
                        }
                    }
                }
            }
        },
        "/namespaces": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Namespace"
                ],
                "summary": "Get list of namespace",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.NamespaceListResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ErrorResponse"
                            }
                        }
                    }
                }
            }
        },
        "/services/{namespace}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Get services for specified namespace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ServiceResultResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ErrorResponse"
                            }
                        }
                    }
                }
            }
        },
        "/services/{namespace}/{service}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Get full details of the service in the specified namespace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "namespace",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "service",
                        "name": "service",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ServiceDetailsResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ErrorResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "isSuccess": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.IngressDetailsResponse": {
            "type": "object",
            "properties": {
                "isSuccess": {
                    "type": "boolean"
                },
                "message": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ingress.IngressDto"
                    }
                }
            }
        },
        "dto.NamespaceListResponse": {
            "type": "object",
            "properties": {
                "isSuccess": {
                    "type": "boolean"
                },
                "message": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.ServiceDetailsResponse": {
            "type": "object",
            "properties": {
                "isSuccess": {
                    "type": "boolean"
                },
                "message": {}
            }
        },
        "dto.ServiceResultResponse": {
            "type": "object",
            "properties": {
                "isSuccess": {
                    "type": "boolean"
                },
                "message": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.ServiceDto"
                    }
                }
            }
        },
        "ingress.Backend": {
            "type": "object",
            "properties": {
                "service": {
                    "$ref": "#/definitions/ingress.Service"
                }
            }
        },
        "ingress.HTTP": {
            "type": "object",
            "properties": {
                "paths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ingress.Paths"
                    }
                }
            }
        },
        "ingress.Ingress": {
            "type": "object",
            "properties": {
                "ip": {
                    "type": "string"
                }
            }
        },
        "ingress.IngressDto": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/ingress.Metadata"
                },
                "spec": {
                    "$ref": "#/definitions/ingress.Spec"
                },
                "status": {
                    "$ref": "#/definitions/ingress.Status"
                }
            }
        },
        "ingress.LoadBalancer": {
            "type": "object",
            "properties": {
                "ingress": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ingress.Ingress"
                    }
                }
            }
        },
        "ingress.Metadata": {
            "type": "object",
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "creationTimestamp": {
                    "type": "string"
                },
                "generation": {
                    "type": "integer"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "resourceVersion": {
                    "type": "string"
                },
                "selfLink": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "ingress.Paths": {
            "type": "object",
            "properties": {
                "backend": {
                    "$ref": "#/definitions/ingress.Backend"
                },
                "path": {
                    "type": "string"
                },
                "pathType": {
                    "type": "string"
                }
            }
        },
        "ingress.Port": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer"
                }
            }
        },
        "ingress.Rules": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "http": {
                    "$ref": "#/definitions/ingress.HTTP"
                }
            }
        },
        "ingress.Service": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "port": {
                    "$ref": "#/definitions/ingress.Port"
                }
            }
        },
        "ingress.Spec": {
            "type": "object",
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ingress.Rules"
                    }
                }
            }
        },
        "ingress.Status": {
            "type": "object",
            "properties": {
                "loadBalancer": {
                    "$ref": "#/definitions/ingress.LoadBalancer"
                }
            }
        },
        "service.ContainerInfo": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "service.PodInfo": {
            "type": "object",
            "properties": {
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.ContainerInfo"
                    }
                },
                "isReady": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "service.Ports": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                },
                "targetPort": {
                    "type": "string"
                }
            }
        },
        "service.ServiceDto": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "List of all annotations associated with the service",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "clusterIP": {
                    "description": "ClusterIP is usually assigned by the master. Valid values are None, empty string (\"\"), or\na valid IP address. None can be specified for headless services when proxying is not required",
                    "type": "string"
                },
                "creationTimestamp": {
                    "description": "Time when the service was created",
                    "type": "string"
                },
                "externalIP": {
                    "description": "ExternalIP is the Ip of the Loadbalancer attached with the service\nIf service type is not Loadbalaner then IP will be none",
                    "type": "string"
                },
                "labels": {
                    "description": "List of all labels associated with the service",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "description": "Name of the service",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace where service is created",
                    "type": "string"
                },
                "podInfo": {
                    "description": "Pod Instances",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.PodInfo"
                    }
                },
                "ports": {
                    "description": "Ports mapped to the service",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.Ports"
                    }
                },
                "selector": {
                    "description": "Label selector of the service.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "state": {
                    "description": "Success statsus, check if any one pod is available to pass request",
                    "type": "string"
                },
                "type": {
                    "description": "Type determines how the service will be exposed.  Valid options: ClusterIP, NodePort, LoadBalancer, ExternalName",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}