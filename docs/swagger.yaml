basePath: /api/v1
definitions:
  dto.ErrorResponse:
    properties:
      error:
        type: string
      isSuccess:
        type: boolean
      status:
        type: string
    type: object
  dto.ServiceResultResponse:
    properties:
      data:
        $ref: '#/definitions/resource.ServiceDto'
      isSuccess:
        type: boolean
    type: object
  resource.Ports:
    properties:
      name:
        type: string
      port:
        type: integer
      protocol:
        type: string
      targetPort:
        type: string
    type: object
  resource.ServiceDto:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: List of all annotations associated with the service
        type: object
      clusterIP:
        description: |-
          ClusterIP is usually assigned by the master. Valid values are None, empty string (""), or
          a valid IP address. None can be specified for headless services when proxying is not required
        type: string
      creationTimestamp:
        description: Time when the service was created
        type: string
      labels:
        additionalProperties:
          type: string
        description: List of all labels associated with the service
        type: object
      name:
        description: Name of the service
        type: string
      namespace:
        description: Namespace where service is created
        type: string
      ports:
        description: Ports mapped to the service
        items:
          $ref: '#/definitions/resource.Ports'
        type: array
      selector:
        additionalProperties:
          type: string
        description: Label selector of the service.
        type: object
      type:
        description: 'Type determines how the service will be exposed.  Valid options:
          ClusterIP, NodePort, LoadBalancer, ExternalName'
        type: string
    type: object
info:
  contact: {}
  description: Kube-spectrum kubernetes Dashboard Service
  title: Kube-spectrum kubernetes Service
  version: "2.0"
paths:
  /services/{namespace}:
    get:
      consumes:
      - '*/*'
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ServiceResultResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            items:
              $ref: '#/definitions/dto.ErrorResponse'
            type: array
      security:
      - BearerAuth: []
      summary: Get services for specified namespace
      tags:
      - Services
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
