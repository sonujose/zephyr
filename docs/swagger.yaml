basePath: /api/v1
definitions:
  dto.ErrorResponse:
    properties:
      description:
        type: string
      isSuccess:
        type: boolean
      message:
        type: string
    type: object
  dto.IngressDetailsResponse:
    properties:
      isSuccess:
        type: boolean
      message:
        items:
          $ref: '#/definitions/ingress.IngressDto'
        type: array
    type: object
  dto.NamespaceListResponse:
    properties:
      isSuccess:
        type: boolean
      message:
        items:
          type: string
        type: array
    type: object
  dto.ServiceDetailsResponse:
    properties:
      isSuccess:
        type: boolean
      message: {}
    type: object
  dto.ServiceResponse:
    properties:
      isSuccess:
        type: boolean
      message: {}
    type: object
  dto.ServiceResultResponse:
    properties:
      isSuccess:
        type: boolean
      message:
        items:
          $ref: '#/definitions/service.ServiceDto'
        type: array
    type: object
  ingress.Backend:
    properties:
      service:
        $ref: '#/definitions/ingress.Service'
    type: object
  ingress.HTTP:
    properties:
      paths:
        items:
          $ref: '#/definitions/ingress.Paths'
        type: array
    type: object
  ingress.Ingress:
    properties:
      ip:
        type: string
    type: object
  ingress.IngressDto:
    properties:
      metadata:
        $ref: '#/definitions/ingress.Metadata'
      spec:
        $ref: '#/definitions/ingress.Spec'
      status:
        $ref: '#/definitions/ingress.Status'
    type: object
  ingress.LoadBalancer:
    properties:
      ingress:
        items:
          $ref: '#/definitions/ingress.Ingress'
        type: array
    type: object
  ingress.Metadata:
    properties:
      annotations:
        additionalProperties:
          type: string
        type: object
      creationTimestamp:
        type: string
      generation:
        type: integer
      labels:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      namespace:
        type: string
      resourceVersion:
        type: string
      selfLink:
        type: string
      uid:
        type: string
    type: object
  ingress.Paths:
    properties:
      backend:
        $ref: '#/definitions/ingress.Backend'
      path:
        type: string
      pathType:
        type: string
    type: object
  ingress.Port:
    properties:
      number:
        type: integer
    type: object
  ingress.Rules:
    properties:
      host:
        type: string
      http:
        $ref: '#/definitions/ingress.HTTP'
    type: object
  ingress.Service:
    properties:
      name:
        type: string
      port:
        $ref: '#/definitions/ingress.Port'
    type: object
  ingress.Spec:
    properties:
      rules:
        items:
          $ref: '#/definitions/ingress.Rules'
        type: array
    type: object
  ingress.Status:
    properties:
      loadBalancer:
        $ref: '#/definitions/ingress.LoadBalancer'
    type: object
  service.ContainerInfo:
    properties:
      image:
        type: string
      name:
        type: string
      status:
        type: boolean
    type: object
  service.PodInfo:
    properties:
      containers:
        items:
          $ref: '#/definitions/service.ContainerInfo'
        type: array
      isReady:
        type: boolean
      name:
        type: string
      reason:
        type: string
      status:
        type: string
    type: object
  service.Ports:
    properties:
      name:
        type: string
      port:
        type: integer
      protocol:
        type: string
      targetPort:
        type: string
    type: object
  service.ServiceDto:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: List of all annotations associated with the service
        type: object
      clusterIP:
        description: |-
          ClusterIP is usually assigned by the master. Valid values are None, empty string (""), or
          a valid IP address. None can be specified for headless services when proxying is not required
        type: string
      creationTimestamp:
        description: Time when the service was created
        type: string
      externalIP:
        description: |-
          ExternalIP is the Ip of the Loadbalancer attached with the service
          If service type is not Loadbalaner then IP will be none
        type: string
      labels:
        additionalProperties:
          type: string
        description: List of all labels associated with the service
        type: object
      name:
        description: Name of the service
        type: string
      namespace:
        description: Namespace where service is created
        type: string
      podInfo:
        description: Pod Instances
        items:
          $ref: '#/definitions/service.PodInfo'
        type: array
      ports:
        description: Ports mapped to the service
        items:
          $ref: '#/definitions/service.Ports'
        type: array
      selector:
        additionalProperties:
          type: string
        description: Label selector of the service.
        type: object
      state:
        description: Success statsus, check if any one pod is available to pass request
        type: string
      type:
        description: 'Type determines how the service will be exposed.  Valid options:
          ClusterIP, NodePort, LoadBalancer, ExternalName'
        type: string
    type: object
info:
  contact: {}
  description: Kube-spectrum kubernetes Dashboard Service
  title: Kube-spectrum kubernetes Service
  version: "2.0"
paths:
  /ingress/{namespace}:
    get:
      consumes:
      - '*/*'
      parameters:
      - description: namespace
        in: path
        name: namespace
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.IngressDetailsResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            items:
              $ref: '#/definitions/dto.ErrorResponse'
            type: array
      security:
      - BearerAuth: []
      summary: Get list of all ingress for the specified namespace
      tags:
      - Ingress
  /namespaces:
    get:
      consumes:
      - '*/*'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.NamespaceListResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            items:
              $ref: '#/definitions/dto.ErrorResponse'
            type: array
      security:
      - BearerAuth: []
      summary: Get list of namespace
      tags:
      - Namespace
  /services/{namespace}:
    get:
      consumes:
      - '*/*'
      parameters:
      - description: namespace
        in: path
        name: namespace
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ServiceResultResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            items:
              $ref: '#/definitions/dto.ErrorResponse'
            type: array
      security:
      - BearerAuth: []
      summary: Get services for specified namespace
      tags:
      - Services
  /services/{namespace}/{service}:
    get:
      consumes:
      - '*/*'
      parameters:
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      - description: service
        in: path
        name: service
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ServiceDetailsResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            items:
              $ref: '#/definitions/dto.ErrorResponse'
            type: array
      security:
      - BearerAuth: []
      summary: Get full details of the service in the specified namespace
      tags:
      - Services
  /services/mappings/ingress/{namespace}/{service}:
    get:
      consumes:
      - '*/*'
      parameters:
      - description: service
        in: path
        name: service
        required: true
        type: string
      - description: namespace
        in: path
        name: namespace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ServiceResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            items:
              $ref: '#/definitions/dto.ErrorResponse'
            type: array
      security:
      - BearerAuth: []
      summary: Get ingress mapping details for specified service
      tags:
      - Services
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
